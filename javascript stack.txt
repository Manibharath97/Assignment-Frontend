<!DOCTYPE html>
<html lan="en">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title> Typescript</title>
        <script src="1.ts" defer></script>
    </head>
</html>
-------------------------------------------------------------------------------------------------
class Stack {
    constructor() {
        this.items =[];
        this.count=0;
    }
 
    push(element) {
 this.items[this.count]=element;
 console.log("new element added to the stack is ", element);
 this.count=this.count+1;
        return this.count-1;
    }
    pop(){
        if(this.count==0) 
        return undefined;
        let deleteItem=this.items[this.count-1];
        this.count=this.count-1;
 console.log("element removed from the stack is ", deleteItem);
 return deleteItem;    
 }
 peek(){
    console.log("peek element is ", this.items[this.count-1]);
 return this.items[this.count-1];
 }
 isEmpty(){
    if(this.count==0)
    console.log("stack is empty");
    else
    console.log("stack is not empty");
 }
 size(){
    console.log("number of elements in the stack are", this.count);
 }
 print(){
    for(let i=0; i<this.count; i++)
    console.log(" ", this.items[i]);
 }
 
    
 }
 const stack = new Stack();
 stack.push(5);
 stack.push(10);
 stack.push(15);
 stack.peek();
 stack.size();
 stack.print();
 stack.pop();
 stack.isEmpty();